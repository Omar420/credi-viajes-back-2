@HOST=http://localhost:4050/api

@TOKEN=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRoSWQiOiI1MzczZThhMC00ZmU0LTQ4OGMtOWFkZi1jMjE3ODRhNTFhMTIiLCJpYXQiOjE3NDY1Njc5MzYsImV4cCI6MTc0NjU4NTkzNn0.2uuBOcBy9mRwzOuZ9T9kPlDYGhkz6oRdIHPsa2l7wzg

@API_KEY = cfrw9D3kOE9RT6yG

@userId=ID_DEL_USUARIO_AUTENTICADO

@targetId=ID_DEL_USUARIO_A_MODIFICAR

# Masculino
@gender_id=fc6bfcb3-41da-4a06-9d8d-e5b00e1aabf2

@country_id=57330fd9-fd79-4d4f-ac19-279d406bc864

@state_id=5b349b92-8e60-489b-b12a-0ebc3fd8291a

# Administrador
@roleId=51b81465-e6a2-4167-a053-4a8b35f2834a
@booking_api_path = /bookings
# @token = {{auth.response.body.data.token}} # Para usuario normal/cliente
@admin_token = {{auth_admin.response.body.data.token}} # Para usuario admin - Asume una request 'auth_admin' en auth.http
@user_token = {{auth_user.response.body.data.token}} # Para un usuario cliente - Asume una request 'auth_user' en auth.http

# Necesitarás IDs válidos de tu base de datos para:
@origin_id = "poner_fk_origin_id_valido_aqui" # ej: ID de un DestinationModel
@destination_id = "poner_fk_destination_id_valido_aqui" # ej: ID de un DestinationModel
@gender_id = "poner_fk_gender_id_valido_aqui" # ej: ID de un GenderModel
@nationality_id = "poner_fk_nationality_country_id_valido_aqui" # ej: ID de un CountriesModel
@doc_type_id = "poner_fk_doc_type_id_valido_aqui" # ej: ID de un DocumentTypesModel
@status_pending_id = "poner_id_status_pending_aqui" # ej: ID de BookingStatusModel para 'PENDING'
@status_confirmed_id = "poner_id_status_confirmed_aqui" # ej: ID de BookingStatusModel para 'CONFIRMED'
@status_cancelled_id = "poner_id_status_cancelled_aqui" # ej: ID de BookingStatusModel para 'CANCELLED'


### ------------------------- BOOKINGS (Cliente/Usuario) ------------------------- ###

### Create a new booking
# @name createBooking
POST {{HOST}}{{booking_api_path}}
Content-Type: application/json
Authorization: Bearer {{user_token}}

{
    "departureDate": "2024-12-15T10:00:00.000Z",
    "returnDate": "2024-12-20T18:00:00.000Z",
    "fk_origin_id": "{{origin_id}}",
    "fk_destination_id": "{{destination_id}}",
    "totalAmount": 250.75, // Opcional, o se calcula en backend
    "name": "Viaje de Navidad a la Playa",
    "notes": "Llevar bloqueador solar y sombrero.",
    "passengers": [
        {
            "firstName": "Juan",
            "firstSurname": "Perez",
            "middleName": "Carlos",
            "fk_gender_id": "{{gender_id}}",
            "dateOfBirth": "1985-05-10",
            "fk_nationality_country_id": "{{nationality_id}}",
            "fk_doc_type_id": "{{doc_type_id}}",
            "documentNumber": "AB1234567",
            "passengerType": "adult"
        },
        {
            "firstName": "Ana",
            "firstSurname": "Gomez",
            "fk_gender_id": "{{gender_id}}",
            "dateOfBirth": "2015-10-20",
            "fk_nationality_country_id": "{{nationality_id}}",
            "fk_doc_type_id": "{{doc_type_id}}",
            "documentNumber": "CD8901234",
            "passengerType": "child"
        }
    ]
}

### Get user's bookings
# @name getUserBookings
GET {{HOST}}{{booking_api_path}}
Authorization: Bearer {{user_token}}

### Get a specific booking by ID (Usuario/Cliente)
# @name getBookingByIdUser
# Suponiendo que {{createBooking.response.body.data.id}} tiene el ID de la reserva creada
GET {{HOST}}{{booking_api_path}}/{{createBooking.response.body.data.id}}
Authorization: Bearer {{user_token}}

### Cancel a booking (Usuario/Cliente)
# @name cancelBookingUser
PUT {{HOST}}{{booking_api_path}}/{{createBooking.response.body.data.id}}/cancel
Authorization: Bearer {{user_token}}


### ------------------------- BOOKINGS (Admin) ------------------------- ###

### Get all bookings (Admin)
# @name getAllBookingsAdmin
GET {{HOST}}{{booking_api_path}}/all
Authorization: Bearer {{admin_token}}


### Get a specific booking by ID (Admin)
# @name getBookingByIdAdmin
# Suponiendo que {{createBooking.response.body.data.id}} tiene el ID de una reserva existente
GET {{HOST}}{{booking_api_path}}/{{createBooking.response.body.data.id}}
Authorization: Bearer {{admin_token}}

### Update booking status (Admin)
# @name updateBookingStatusAdmin
PATCH {{HOST}}{{booking_api_path}}/{{createBooking.response.body.data.id}}/status
Content-Type: application/json
Authorization: Bearer {{admin_token}}

{
    "fk_status_id": "{{status_confirmed_id}}",
    "paymentSuccessful": true
}

### Cancel a booking (Admin)
# @name cancelBookingAdmin
PUT {{HOST}}{{booking_api_path}}/{{createBooking.response.body.data.id}}/cancel
Authorization: Bearer {{admin_token}}


### ------------------------- Casos de Prueba Adicionales ------------------------- ###

### Create booking with an infant (requiere lógica de associatedAdultId)
# POST {{HOST}}{{booking_api_path}}
# Content-Type: application/json
# Authorization: Bearer {{user_token}}
# {
#     "departureDate": "2025-01-10T10:00:00.000Z",
#     "fk_origin_id": "{{origin_id}}",
#     "fk_destination_id": "{{destination_id}}",
#     "passengers": [
#         {
#             "firstName": "Maria",
#             "firstSurname": "Lopez",
#             "fk_gender_id": "{{gender_id}}",
#             "dateOfBirth": "1990-03-15",
#             "fk_nationality_country_id": "{{nationality_id}}",
#             "fk_doc_type_id": "{{doc_type_id}}",
#             "documentNumber": "EF2345678",
#             "passengerType": "adult"
#             // Si el backend asigna IDs temporales o el front los envía: "tempId": "adulto1" 
#         },
#         {
#             "firstName": "Bebe",
#             "firstSurname": "Lopez",
#             "fk_gender_id": "{{gender_id}}",
#             "dateOfBirth": "2023-11-01",
#             "fk_nationality_country_id": "{{nationality_id}}",
#             "fk_doc_type_id": "{{doc_type_id}}", // O un tipo de doc. para infantes
#             "documentNumber": "INF901234",
#             "passengerType": "infant",
#             "associatedAdultId": null // El backend necesitaría lógica para asociar al adulto creado en la misma request
#                                      // O el front envía "associatedAdultTempId": "adulto1"
#         }
#     ]
# }

### Create booking with validation error (e.g., too many passengers)
# POST {{HOST}}{{booking_api_path}}
# Content-Type: application/json
# Authorization: Bearer {{user_token}}
# {
#     "departureDate": "2024-11-01T00:00:00.000Z",
#     "fk_origin_id": "{{origin_id}}",
#     "fk_destination_id": "{{destination_id}}",
#     "passengers": [ /* Array con 10 pasajeros */ ]
# }

### Separador para organizar visualmente en VS Code (Rest Client)
###
